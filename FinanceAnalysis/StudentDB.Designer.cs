//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SchoolDBModel", "FK_Course_Teacher", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FinanceAnalysis.Teacher), "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FinanceAnalysis.Cours), true)]
[assembly: EdmRelationshipAttribute("SchoolDBModel", "FK_Student_Standard", "Standards", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FinanceAnalysis.Standard), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FinanceAnalysis.Student), true)]
[assembly: EdmRelationshipAttribute("SchoolDBModel", "FK_Teacher_Standard", "Standards", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FinanceAnalysis.Standard), "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FinanceAnalysis.Teacher), true)]
[assembly: EdmRelationshipAttribute("SchoolDBModel", "FK_StudentAddress_Student", "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FinanceAnalysis.Student), "StudentAddresses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FinanceAnalysis.StudentAddress), true)]
[assembly: EdmRelationshipAttribute("SchoolDBModel", "StudentCourse", "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FinanceAnalysis.Cours), "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FinanceAnalysis.Student))]

#endregion

namespace FinanceAnalysis
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SchoolDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SchoolDBEntities object using the connection string found in the 'SchoolDBEntities' section of the application configuration file.
        /// </summary>
        public SchoolDBEntities() : base("name=SchoolDBEntities", "SchoolDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchoolDBEntities object.
        /// </summary>
        public SchoolDBEntities(string connectionString) : base(connectionString, "SchoolDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchoolDBEntities object.
        /// </summary>
        public SchoolDBEntities(EntityConnection connection) : base(connection, "SchoolDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cours> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Cours>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Cours> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Standard> Standards
        {
            get
            {
                if ((_Standards == null))
                {
                    _Standards = base.CreateObjectSet<Standard>("Standards");
                }
                return _Standards;
            }
        }
        private ObjectSet<Standard> _Standards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentAddress> StudentAddresses
        {
            get
            {
                if ((_StudentAddresses == null))
                {
                    _StudentAddresses = base.CreateObjectSet<StudentAddress>("StudentAddresses");
                }
                return _StudentAddresses;
            }
        }
        private ObjectSet<StudentAddress> _StudentAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teacher> Teachers
        {
            get
            {
                if ((_Teachers == null))
                {
                    _Teachers = base.CreateObjectSet<Teacher>("Teachers");
                }
                return _Teachers;
            }
        }
        private ObjectSet<Teacher> _Teachers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View_StudentCourse> View_StudentCourse
        {
            get
            {
                if ((_View_StudentCourse == null))
                {
                    _View_StudentCourse = base.CreateObjectSet<View_StudentCourse>("View_StudentCourse");
                }
                return _View_StudentCourse;
            }
        }
        private ObjectSet<View_StudentCourse> _View_StudentCourse;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Cours cours)
        {
            base.AddObject("Courses", cours);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Standards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandards(Standard standard)
        {
            base.AddObject("Standards", standard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentAddresses(StudentAddress studentAddress)
        {
            base.AddObject("StudentAddresses", studentAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teachers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeachers(Teacher teacher)
        {
            base.AddObject("Teachers", teacher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the View_StudentCourse EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToView_StudentCourse(View_StudentCourse view_StudentCourse)
        {
            base.AddObject("View_StudentCourse", view_StudentCourse);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="Cours")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cours : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cours object.
        /// </summary>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static Cours CreateCours(global::System.Int32 courseId)
        {
            Cours cours = new Cours();
            cours.CourseId = courseId;
            return cours;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Teacher_TeacherId
        {
            get
            {
                return _Teacher_TeacherId;
            }
            set
            {
                OnTeacher_TeacherIdChanging(value);
                ReportPropertyChanging("Teacher_TeacherId");
                _Teacher_TeacherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Teacher_TeacherId");
                OnTeacher_TeacherIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Teacher_TeacherId;
        partial void OnTeacher_TeacherIdChanging(Nullable<global::System.Int32> value);
        partial void OnTeacher_TeacherIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Course_Teacher", "Teachers")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("SchoolDBModel.FK_Course_Teacher", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("SchoolDBModel.FK_Course_Teacher", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("SchoolDBModel.FK_Course_Teacher", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("SchoolDBModel.FK_Course_Teacher", "Teachers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "StudentCourse", "Students")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("SchoolDBModel.StudentCourse", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("SchoolDBModel.StudentCourse", "Students", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="Standard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Standard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Standard object.
        /// </summary>
        /// <param name="standardId">Initial value of the StandardId property.</param>
        public static Standard CreateStandard(global::System.Int32 standardId)
        {
            Standard standard = new Standard();
            standard.StandardId = standardId;
            return standard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StandardId
        {
            get
            {
                return _StandardId;
            }
            set
            {
                if (_StandardId != value)
                {
                    OnStandardIdChanging(value);
                    ReportPropertyChanging("StandardId");
                    _StandardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StandardId");
                    OnStandardIdChanged();
                }
            }
        }
        private global::System.Int32 _StandardId;
        partial void OnStandardIdChanging(global::System.Int32 value);
        partial void OnStandardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StandardName
        {
            get
            {
                return _StandardName;
            }
            set
            {
                OnStandardNameChanging(value);
                ReportPropertyChanging("StandardName");
                _StandardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StandardName");
                OnStandardNameChanged();
            }
        }
        private global::System.String _StandardName;
        partial void OnStandardNameChanging(global::System.String value);
        partial void OnStandardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Student_Standard", "Students")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("SchoolDBModel.FK_Student_Standard", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("SchoolDBModel.FK_Student_Standard", "Students", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Teacher_Standard", "Teachers")]
        public EntityCollection<Teacher> Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teacher>("SchoolDBModel.FK_Teacher_Standard", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teacher>("SchoolDBModel.FK_Teacher_Standard", "Teachers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        public static Student CreateStudent(global::System.Int32 studentID)
        {
            Student student = new Student();
            student.StudentID = studentID;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Standard_StandardId
        {
            get
            {
                return _Standard_StandardId;
            }
            set
            {
                OnStandard_StandardIdChanging(value);
                ReportPropertyChanging("Standard_StandardId");
                _Standard_StandardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Standard_StandardId");
                OnStandard_StandardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Standard_StandardId;
        partial void OnStandard_StandardIdChanging(Nullable<global::System.Int32> value);
        partial void OnStandard_StandardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Student_Standard", "Standards")]
        public Standard Standard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Student_Standard", "Standards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Student_Standard", "Standards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Standard> StandardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Student_Standard", "Standards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Standard>("SchoolDBModel.FK_Student_Standard", "Standards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_StudentAddress_Student", "StudentAddresses")]
        public StudentAddress StudentAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudentAddress>("SchoolDBModel.FK_StudentAddress_Student", "StudentAddresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudentAddress>("SchoolDBModel.FK_StudentAddress_Student", "StudentAddresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StudentAddress> StudentAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudentAddress>("SchoolDBModel.FK_StudentAddress_Student", "StudentAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StudentAddress>("SchoolDBModel.FK_StudentAddress_Student", "StudentAddresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "StudentCourse", "Courses")]
        public EntityCollection<Cours> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cours>("SchoolDBModel.StudentCourse", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cours>("SchoolDBModel.StudentCourse", "Courses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="StudentAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentAddress object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static StudentAddress CreateStudentAddress(global::System.Int32 studentID, global::System.String address1, global::System.String city, global::System.String state)
        {
            StudentAddress studentAddress = new StudentAddress();
            studentAddress.StudentID = studentID;
            studentAddress.Address1 = address1;
            studentAddress.City = city;
            studentAddress.State = state;
            return studentAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_StudentAddress_Student", "Students")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("SchoolDBModel.FK_StudentAddress_Student", "Students").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("SchoolDBModel.FK_StudentAddress_Student", "Students").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("SchoolDBModel.FK_StudentAddress_Student", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("SchoolDBModel.FK_StudentAddress_Student", "Students", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="Teacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teacher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teacher object.
        /// </summary>
        /// <param name="teacherId">Initial value of the TeacherId property.</param>
        public static Teacher CreateTeacher(global::System.Int32 teacherId)
        {
            Teacher teacher = new Teacher();
            teacher.TeacherId = teacherId;
            return teacher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherId
        {
            get
            {
                return _TeacherId;
            }
            set
            {
                if (_TeacherId != value)
                {
                    OnTeacherIdChanging(value);
                    ReportPropertyChanging("TeacherId");
                    _TeacherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeacherId");
                    OnTeacherIdChanged();
                }
            }
        }
        private global::System.Int32 _TeacherId;
        partial void OnTeacherIdChanging(global::System.Int32 value);
        partial void OnTeacherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeacherName
        {
            get
            {
                return _TeacherName;
            }
            set
            {
                OnTeacherNameChanging(value);
                ReportPropertyChanging("TeacherName");
                _TeacherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeacherName");
                OnTeacherNameChanged();
            }
        }
        private global::System.String _TeacherName;
        partial void OnTeacherNameChanging(global::System.String value);
        partial void OnTeacherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Standard_StandardId
        {
            get
            {
                return _Standard_StandardId;
            }
            set
            {
                OnStandard_StandardIdChanging(value);
                ReportPropertyChanging("Standard_StandardId");
                _Standard_StandardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Standard_StandardId");
                OnStandard_StandardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Standard_StandardId;
        partial void OnStandard_StandardIdChanging(Nullable<global::System.Int32> value);
        partial void OnStandard_StandardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Course_Teacher", "Courses")]
        public EntityCollection<Cours> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cours>("SchoolDBModel.FK_Course_Teacher", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cours>("SchoolDBModel.FK_Course_Teacher", "Courses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolDBModel", "FK_Teacher_Standard", "Standards")]
        public Standard Standard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Teacher_Standard", "Standards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Teacher_Standard", "Standards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Standard> StandardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("SchoolDBModel.FK_Teacher_Standard", "Standards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Standard>("SchoolDBModel.FK_Teacher_Standard", "Standards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolDBModel", Name="View_StudentCourse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_StudentCourse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View_StudentCourse object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static View_StudentCourse CreateView_StudentCourse(global::System.Int32 studentID, global::System.Int32 courseId)
        {
            View_StudentCourse view_StudentCourse = new View_StudentCourse();
            view_StudentCourse.StudentID = studentID;
            view_StudentCourse.CourseId = courseId;
            return view_StudentCourse;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();

        #endregion
    
    }

    #endregion
    
}
